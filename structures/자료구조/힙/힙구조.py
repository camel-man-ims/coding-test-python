# 21.05.12
# 힙 = 데이터에서 최대/최소를 빠르게 찾기 위해 고안된 완전 이진 트리
# 완전 이진 트리 = 노드를 삽입할 때 최하단 왼쪽 노드부터 차례로 삽입하는 트리

# 최소 힙 = 부모가 자식보다 항상 작다 ( 최대힙은 반대 )

# 삽입은 일단 완전 이진 트리방식으로 삽입하고 ( 왼쪽아래부터 차례대로 )
# 그 다음에 자식이 부모보다 크다면 위치를 바꿔준다

# 삭제는 중간에 있는 것을 삭제하는 경우는 없고, 루트의 값만 삭제하는 것이 일반적
# 삭제 후 가장 마지막에 들어간 노드를 루트로 올린다
# 최대 힙 기준으로, 8     ( 8이 가장 마지막에 들어갔다고 가정)
#              15 10
# 자식노드 중 큰 값과 바꿔준다
#      15
#     8  10
# 다시 자식 노드가 있다면, 자식 노드 중 큰 값과 바꿔준다.
# 자식 노드가 없거나, 부모가 클 때까지 반복한다.

import heapq

arr = [4,4020,3,5,1,9,10,232,2]
heap_arr = []

for num in arr:
    heapq.heappush(heap_arr,-num)

for _ in range(len(arr)):
    num = -heapq.heappop(heap_arr)
    print(num)